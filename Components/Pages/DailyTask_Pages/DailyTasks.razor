@page "/dailytasks"
@using Microsoft.AspNetCore.Authorization
@using PokeGoTools.Data
@inject AuthenticationStateProvider _authenticationStateProvider
@inject IDailyTaskRepository _dailyTaskRepository
@attribute [Authorize]

<h3 class="m-3">Daily Tasks</h3>

<div class="row m-3">

    <ul class="list-group">
        @foreach(var task in DailyTaskList)
        {
            <li class="list-group-item">
                <InputCheckbox class="form-check-input col-sm-3" Value="task.IsCompleted" 
                ValueChanged="async (checkedValue) => await ToggleIsCompleted(task.Id, checkedValue)"
                               ValueExpression="() => task.IsCompleted" />
                <label class="col-sm-9">@task.Name</label>

            </li>
        }
    </ul>
</div>

@code {
    private IEnumerable<DailyTask> DailyTaskList = new List<DailyTask>();
    private string UserId;

    protected override async Task OnInitializedAsync()
    {
        var authState = await _authenticationStateProvider.GetAuthenticationStateAsync();
        var user = authState.User;
        UserId = user.FindFirst(u => u.Type.Contains("nameidentifier"))?.Value;
        DailyTaskList = await _dailyTaskRepository.GetAllAsync(UserId);
    }

    private async Task ToggleIsCompleted(int id, bool isChecked)
    {
        await _dailyTaskRepository.ToggleTaskAsync(id);
        DailyTaskList = await _dailyTaskRepository.GetAllAsync(UserId);
        Console.WriteLine($"Toggle Clicked. Id is: {id}");
        StateHasChanged();
    }
    
}
